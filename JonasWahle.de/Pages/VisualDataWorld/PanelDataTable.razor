@inject IApiService _apiService


<MudTable Items="@TableData?.Data" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@IsLoadingData">
    <HeaderContent>
        <MudTh>Jahr</MudTh>
        @foreach (var column in TableData?.Columns ?? Enumerable.Empty<TableColumn>())
        {
            <MudTh>
                <div>@column.Name</div>
                @if (!string.IsNullOrEmpty(column.Unit))
                {
                    <MudText Typo="Typo.caption">(@column.Unit)</MudText>
                }
            </MudTh>
        }
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Jahr">@context["Year"]</MudTd>
        @foreach (var column in TableData?.Columns ?? Enumerable.Empty<TableColumn>())
        {
            <MudTd DataLabel="@column.Name">
                @if (context.TryGetValue(column.Name, out var value))
                {
                    @_apiService.FormatValue(value, column)
                }
            </MudTd>
        }
    </RowTemplate>
    <LoadingContent>
        <MudProgressCircular Indeterminate Color="Color.Tertiary" Size="Size.Large" />
    </LoadingContent>
    <NoRecordsContent>
        <MudText Typo="Typo.body1" Align="Align.Center">Keine Daten vorhanden</MudText>
    </NoRecordsContent>
</MudTable>

@code {
    [Parameter]
    public required TableResponse TableData { get; set; }
    [Parameter]
    public bool IsLoadingData { get; set; }
    [Parameter]
    public EventCallback<bool> IsLoadingDataChanged { get; set; }
}
